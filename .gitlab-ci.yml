include:
  - remote: http://qa.gitlab.nelogica.com.br/gitlab_yml/v3/Python.gitlab-ci.yml
  - local: .gitlab-ci/theia.gitlab-ci.yml

variables:
  RULE_PIPE_EXCEPT: "/.+/"
  THEIA_DEPLOY_WEBHOOK: "https://nelogica.webhook.office.com/webhookb2/4515cfa6-2ff9-4bf9-be6b-78f9dc661db2@c464c88d-4de9-46bf-88e9-78839bfe32d7/IncomingWebhook/3b37f34603e44cafba0a455fd42bb976/2f35b7ca-ef44-4ef4-bf5b-385a7ca19c6c"

# Testing Theia in Linux and Windows.
test_theia_lin:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE =~ /(merge_request_event)|(schedule)/
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  image: gitlab.nelogica.com.br:4567/qa/adonis/janus/adonis_image:latest
  tags:
    - docker-linux
  variables:
    THEIA_INTERPRETER: python
  script:
    - $THEIA_INTERPRETER -m Theia --requirements $CI_PROJECT_DIR/.gitlab-ci/requirements.txt --interpreters $THEIA_INTERPRETER --directory $CI_PROJECT_DIR
    - $CI_PROJECT_DIR/theia_venv/bin/python --version

test_theia_win:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE =~ /(merge_request_event)|(schedule)/
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  tags:
    - AdonisWindows
  variables:
    THEIA_INTERPRETER: C:\Python310\python.exe
  script:
    - powershell -c "$THEIA_INTERPRETER -m Theia --requirements $CI_PROJECT_DIR/.gitlab-ci/requirements.txt --interpreters $THEIA_INTERPRETER --directory $CI_PROJECT_DIR"
    - powershell -c "$CI_PROJECT_DIR/theia_venv/Scripts/python.exe --version"

deploy_hotfix:
  stage: deploy
  needs: []
  dependencies: []
  variables:
    TARGET_HOSTS: all
  rules:
    - if: $CI_PIPELINE_SOURCE =~ /(merge_request_event)/
      when: never
    - # Manual + allow_failure true = pipe does not wait for job to execute.
      when: manual
      allow_failure: true
  tags:
    - docker-linux
  image: 'gitlab.nelogica.com.br:4567/qa/docker_images:qaansible'
  script:
    - chmod 600 $qa_ssh_key
    - echo $TARGET_HOSTS
    - ansible-playbook -i .gitlab-ci/hosts .gitlab-ci/theia-hotfix.yml -vv
  after_script:
    - rm -f $qa_ssh_key


win1:
  extends: .theia_manage
  variables:
    TARGET_HOSTS: $CI_JOB_NAME
    WHICH_PHASE: "/(Phase1)/i"

win2:
  extends: win1
  variables:
    WHICH_PHASE: "/(Phase2)/i"

win3:
  extends: win1
  variables:
    WHICH_PHASE: "/(Phase3)/i"

win4:
  extends: win1
  variables:
    WHICH_PHASE: "/(Phase4)/i"

.win_aws:
  stage: deploy
  needs: []
  rules:
    - if: $CI_PIPELINE_SOURCE =~ /(merge_request_event)/
      when: never
    - if: $WHICH_PIPE && $WHICH_PIPE =~ $WHICH_PHASE
    - # Manual + allow_failure true = pipe does not wait for job to execute.
      when: manual
      allow_failure: true
  variables:
    TARGET_HOSTS: $CI_JOB_NAME
  trigger:
    include: .gitlab-ci/aws.gitlab-ci.yml
    strategy: depend

win_aws_1:
  extends: .win_aws
  variables:
    QA_AWS_RUNNER_LIST: QAD03  # ,QAD12 : Auto deploy to QAD12 should be enabled after Profit tags are using Adonis.
    WHICH_PHASE: "/(Phase1)/i"

win_aws_2:
  extends: .win_aws
  variables:
    QA_AWS_RUNNER_LIST: QAD04,QAD15
    WHICH_PHASE: "/(Phase2)/i"

win_aws_3:
  extends: .win_aws
  variables:
    QA_AWS_RUNNER_LIST: QAD05,QAD16
    WHICH_PHASE: "/(Phase3)/i"

notify_theia_failure:
  stage: .post
  extends: .job_trigger
  dependencies: []
  rules:
    - if: $CI_PIPELINE_SOURCE =~ /(merge_request_event)/
      when: never
    - if: $WHICH_PIPE =~ /(Phase1)/
      when: on_failure
      variables:
        NOTIFY_JOB_SUBTITLE: Today the deploy was attempted in R01, R02, R03 and QAD03
    - if: $WHICH_PIPE =~ /(Phase2)/
      when: on_failure
      variables:
        NOTIFY_JOB_SUBTITLE: Today the deploy was attempted in R06, R07, R12, QAD04 and QAD15
    - if: $WHICH_PIPE =~ /(Phase3)/
      when: on_failure
      variables:
        NOTIFY_JOB_SUBTITLE: Today the deploy was attempted in R13, R14, QAD05 and QAD16
    - if: $WHICH_PIPE =~ /(Phase4)/
      when: on_failure
      variables:
        NOTIFY_JOB_SUBTITLE: Today the deploy was attempted in DKTR08, DKTR09 and DKTR10
    - if: $CI_COMMIT_BRANCH =~ /(master)/
      when: on_failure
      variables:
        NOTIFY_JOB_SUBTITLE: Today the deploy was attempted manually.
  variables:
    JOB_OPTION: notify --teams $THEIA_DEPLOY_WEBHOOK
    NOTIFY_JOB_TITLE: Theia Deploy $WHICH_PIPE - FAILED - ($CI_COMMIT_BRANCH)
    NOTIFY_JOB_KWARGS: "{'url':'${CI_PIPELINE_URL}','color':'RED','image':'Erro'}"

notify_theia_success:
  stage: .post
  extends: .job_trigger
  dependencies: []
  rules:
    - if: $CI_PIPELINE_SOURCE =~ /(merge_request_event)/
      when: never
    - if: $WHICH_PIPE =~ /(Phase1)/
      when: on_failure
      variables:
        NOTIFY_JOB_SUBTITLE: Today the deploy was done in R01, R02, R03 and QAD03
    - if: $WHICH_PIPE =~ /(Phase2)/
      when: on_success
      variables:
        NOTIFY_JOB_SUBTITLE: Today the deploy was done in R06, R07, R12, QAD04 and QAD15
    - if: $WHICH_PIPE =~ /(Phase3)/
      when: on_success
      variables:
        NOTIFY_JOB_SUBTITLE: Today the deploy was done in R13, R14, QAD05 and QAD16
    - if: $WHICH_PIPE =~ /(Phase4)/
      when: on_success
      variables:
        NOTIFY_JOB_SUBTITLE: Today the deploy was done in DKTR08, DKTR09 and DKTR10
  variables:
    JOB_OPTION: notify --teams $THEIA_DEPLOY_WEBHOOK
    NOTIFY_JOB_TITLE: Theia Deploy $WHICH_PIPE - SUCCEEDED - ($CI_COMMIT_BRANCH)
    NOTIFY_JOB_KWARGS: "{'url':'${CI_PIPELINE_URL}','color':'GREEN','image':'CI_CD'}"

publish:
  extends: [.publish]
